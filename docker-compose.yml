version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: is_backend_c

    # Původní nastavení – mount celého repa (i s cache)
    volumes:
      - .:/workspace:cached

    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=is_db_c
      - DATABASE_PORT=5432
      - FLASK_APP=run.py

    # Původní „sleep“, abychom kontejner udrželi běžet
    command: /bin/sh -c "while sleep 1000; do :; done"

    networks:
      - backend
      - frontend

  frontend:
    build:
      context: ./frontend
    container_name: is_frontend_c

    volumes:
      - .:/workspace:cached

    ports:
      - "5173:5173"
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - VITE_SERVER_HOST=0.0.0.0

    command: /bin/sh -c "while sleep 1000; do :; done"
    depends_on:
      - backend
    networks:
      - frontend

  db:
    image: postgres:latest
    container_name: is_db_c
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
